 Java Intro- https://www.oracle.com/technetwork/java/intro-141325.html
 Features of Java:
    - Onject Oriented
    - robust
    - secure
    - platform independent
    - high performing
    - inerpreted
    - threaded
    - dynamic

Java platform:
    > Two Components:
        - Java Virtual Machine JVM
        - Java API

        -- both together known as JRE
    
    > Java Source Code is compiled as well as interpreted
        - Java compiler compiles source code to bytecode(intermediate code)
          that is interpreted by JVM into machine code and that is run on actual platform.
    *FLOW: Java Application Code --> Java Compiler --> ByteCode --> JVM --> Machine Code --> Run in Hardware OS 

Version and Editions:
    - Java EE
        - Java SE
            -Java ME

Object Oriented Programming

 - Class : Blueprint
 - Objects : Real world entities

 Features:
  - Abstraction
  - Inheritence
  - Polymorphism
  

  Primitive Data Types
    - byte 
    - short
    - int 
    - long
    - float
    - double
    - char
    - boolean

Objects v/s Primitive
 - Objects have state and behaviour
 - Primitives have only single value

Instantiating an Object
    String s = new String();
    Circle c = new Circle();

    Circle = Reference Types
    c = referendce variable
    new = keyworld
    Circle() = Object type

Memory Management - Stack and Heap
    - In the memory managed by JVM behind the scenes,
         object references and objects assigned to them are managed by Stacks and Heaps

Objects contain data, data is stored in instance variables

Instantian of an Object:
    - Using new keyword
    - When you Instante an Object with new Keyword you are actually reating a special method called Constructor
    
    Class X Instantes Point
    Point point = new Point(2, 5);

    Class Point 
    public Class Point{
        //Constructor
         public Point(int p1, int p2){
             x = p1;
             y = p2;
         }
     }

Constructor gives you flexibilty to pass any no. of parameters in int

Customer c = new Customer(a, b, c)
Customer c = new Customer();
Customer c = new Customer(a, b);

-> Creating Object Types
    - An object type is called as Class
    - A class is a template for object creation
    - An object is really an instance of class
    - Many object instances can be generated from the class

    Note: Each file may only contain only one public top level class
        * Other top level classes may be included in one file but they may not list an access modifier.(Encapsulation ref*)
        //Good Exam Topic
        public class HelloWorld{

        }
        class AHelperClass{

        }

        (Refer Car Class Example)

        - Instance Variables are created before methods in Class.